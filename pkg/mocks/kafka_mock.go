// Code generated by MockGen. DO NOT EDIT.
// Source: kafka_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIKafka is a mock of IKafka interface.
type MockIKafka struct {
	ctrl     *gomock.Controller
	recorder *MockIKafkaMockRecorder
}

// MockIKafkaMockRecorder is the mock recorder for MockIKafka.
type MockIKafkaMockRecorder struct {
	mock *MockIKafka
}

// NewMockIKafka creates a new mock instance.
func NewMockIKafka(ctrl *gomock.Controller) *MockIKafka {
	mock := &MockIKafka{ctrl: ctrl}
	mock.recorder = &MockIKafkaMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIKafka) EXPECT() *MockIKafkaMockRecorder {
	return m.recorder
}

// PushToKafkaStream mocks base method.
func (m *MockIKafka) PushToKafkaStream(msg string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PushToKafkaStream", msg)
}

// PushToKafkaStream indicates an expected call of PushToKafkaStream.
func (mr *MockIKafkaMockRecorder) PushToKafkaStream(msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PushToKafkaStream", reflect.TypeOf((*MockIKafka)(nil).PushToKafkaStream), msg)
}
